<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <!-- <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/> -->
  <arg name="move_forward_only" default="False"/>
  <arg name="explorer" default="RRT"/>
  <arg name="open_rviz" default="true"/>
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
  <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/>

  <arg name="stage" default="2"/>
  <param name="stage_number"  value="$(arg stage)"/>

  <!-- TurtleBot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- SLAM Node -->
  <include file="$(find ros_autonomous_slam)/launch/turtlebot3_slam_mod.launch">
  </include>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL -->
  <!-- <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/> -->

  <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find ros_autonomous_slam)/rviz/turtlebot3_$(arg slam_methods)_RL_Testing.rviz"/>
  </group>

  <!-- move_base -->
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>



  <!-- <node pkg="tf" type="static_transform_publisher" name="odom_wrt_map_tf" args="0 0 0 0 0 0 map odom 1" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="scan_wrt_map_tf" args="0 0 0 0 0 0 map scan 1" /> -->

</launch>
